// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package jwt.proxies;

public class PublicClaim
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject publicClaimMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "JWT.PublicClaim";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Claim("Claim"),
		Claim_JWT("JWT.Claim_JWT");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public PublicClaim(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "JWT.PublicClaim"));
	}

	protected PublicClaim(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject publicClaimMendixObject)
	{
		if (publicClaimMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("JWT.PublicClaim", publicClaimMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a JWT.PublicClaim");

		this.publicClaimMendixObject = publicClaimMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'PublicClaim.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static jwt.proxies.PublicClaim initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return jwt.proxies.PublicClaim.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static jwt.proxies.PublicClaim initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		if (com.mendix.core.Core.isSubClassOf("JWT.PublicClaimBoolean", mendixObject.getType()))
			return jwt.proxies.PublicClaimBoolean.initialize(context, mendixObject);

		if (com.mendix.core.Core.isSubClassOf("JWT.PublicClaimDate", mendixObject.getType()))
			return jwt.proxies.PublicClaimDate.initialize(context, mendixObject);

		if (com.mendix.core.Core.isSubClassOf("JWT.PublicClaimDecimal", mendixObject.getType()))
			return jwt.proxies.PublicClaimDecimal.initialize(context, mendixObject);

		if (com.mendix.core.Core.isSubClassOf("JWT.PublicClaimInteger", mendixObject.getType()))
			return jwt.proxies.PublicClaimInteger.initialize(context, mendixObject);

		if (com.mendix.core.Core.isSubClassOf("JWT.PublicClaimLong", mendixObject.getType()))
			return jwt.proxies.PublicClaimLong.initialize(context, mendixObject);

		if (com.mendix.core.Core.isSubClassOf("JWT.PublicClaimResponse", mendixObject.getType()))
			return jwt.proxies.PublicClaimResponse.initialize(context, mendixObject);

		if (com.mendix.core.Core.isSubClassOf("JWT.PublicClaimString", mendixObject.getType()))
			return jwt.proxies.PublicClaimString.initialize(context, mendixObject);

		return new jwt.proxies.PublicClaim(context, mendixObject);
	}

	public static jwt.proxies.PublicClaim load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return jwt.proxies.PublicClaim.initialize(context, mendixObject);
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of Claim
	 */
	public final java.lang.String getClaim()
	{
		return getClaim(getContext());
	}

	/**
	 * @param context
	 * @return value of Claim
	 */
	public final java.lang.String getClaim(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Claim.toString());
	}

	/**
	 * Set value of Claim
	 * @param claim
	 */
	public final void setClaim(java.lang.String claim)
	{
		setClaim(getContext(), claim);
	}

	/**
	 * Set value of Claim
	 * @param context
	 * @param claim
	 */
	public final void setClaim(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String claim)
	{
		getMendixObject().setValue(context, MemberNames.Claim.toString(), claim);
	}

	/**
	 * @return value of Claim_JWT
	 */
	public final jwt.proxies.JWT getClaim_JWT() throws com.mendix.core.CoreException
	{
		return getClaim_JWT(getContext());
	}

	/**
	 * @param context
	 * @return value of Claim_JWT
	 */
	public final jwt.proxies.JWT getClaim_JWT(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		jwt.proxies.JWT result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Claim_JWT.toString());
		if (identifier != null)
			result = jwt.proxies.JWT.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Claim_JWT
	 * @param claim_jwt
	 */
	public final void setClaim_JWT(jwt.proxies.JWT claim_jwt)
	{
		setClaim_JWT(getContext(), claim_jwt);
	}

	/**
	 * Set value of Claim_JWT
	 * @param context
	 * @param claim_jwt
	 */
	public final void setClaim_JWT(com.mendix.systemwideinterfaces.core.IContext context, jwt.proxies.JWT claim_jwt)
	{
		if (claim_jwt == null)
			getMendixObject().setValue(context, MemberNames.Claim_JWT.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Claim_JWT.toString(), claim_jwt.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return publicClaimMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final jwt.proxies.PublicClaim that = (jwt.proxies.PublicClaim) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "JWT.PublicClaim";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
